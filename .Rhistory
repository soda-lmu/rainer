read.csv("data/testfile")
rexplain()
library(devtools)
library(usethis)
use_r("rimprove")
load_all()
rimprove()
devtools::check()
?loadedNamespaces
#examples for checking
data = mtcars
load_all()
rexport("test1")
load_all()
rexport("test1")
devtools::check()
devtools::check()
devtools::check()
library(devtools)
use_r("ractivate.R")
#rainer::raictivate to activate/deactivate automatical feedback in case of a warning message
ractivate = function(switch) {
if(switch == "on") {
environment_info = list(
objects = Environment_Objects(),
data_header = header(),
directory = getwd(),
packages = list(loadedNamespaces()),
current_script = try(rstudioapi::getActiveDocumentContext()$contents),
errors = geterrmessage()
)
if(is.null(errors)) {stop()} else {
#Azure OpenAI Client
client = list(
azure_endpoint = "https://soda-oai-easyaccess-prod-swedencentral.openai.azure.com",
api_key = "39257ccf9f724bdc81add8c7ca1e155b",
deployment_name = "gpt-35-turbo",
api_version = "2024-08-01-preview"
)
#building the message
body = list(
messages = list(
list(role = "system", content = "You are helping students in an university level R programming course for beginners."),
list(role = "user", content = paste("You got the following information on the current state of my work in R: \n",
jsonlite::toJSON(environment_info, auto_unbox = TRUE),
"\n Identify the error and give me a concise feedback of how to correct the issue."))),
max_tokens = 250
)
#formatting the response
response_json = call_openai_api(client = client, body = body)
content_vector = response_json$choices$message.content
#printing the response
print(content_vector)
}
}
}
load_all()
table(data$hp, data$fast)
ractivate(on)
ractivate("on")
load_all()
load_all()
ractivate("on")
table(data$hp, data$fast)
ractivate("on")
load_all()
ractivate("on")
load_all()
ractivate("on")
rexplain()
load_all()
ractivate("on")
load_all()
rexplain()
errors = geterrmessage()
last.warning
last.error
?last.warning
library(devtools)
load_all()
#examples for checking
data = mtcars
var1 = 5
table(data$hp, data$fast)
rexplain()
load_all()
table(data$hp, data$fast)
rexplain()
load_all()
table(data$hp, data$fast)
rexplain()
plot = ggplot(data = mtcars, mapping = aes(x = hp, y = cyl)) +
geom_point()
data = mtcars
View(data)
?mtcars
summary(data$weight_kg)
load_all()
summary(data$weight_kg)
rexplain()
summary[data$hp]
rexplain()
summary(data$weight_kg)
rexplain()
speichere_letzten_befehl <- function() {
letzter_befehl <- tail(history(max.show = Inf), 1) # Letzten Befehl abrufen
befehl_liste <<- append(befehl_liste, letzter_befehl) # In die Liste speichern
}
# Beispielaufruf der Funktion nach einem Befehl
speichere_letzten_befehl() # Speichert den letzten Befehl in der Liste
befehl_liste <- list()
speichere_letzten_befehl <- function() {
letzter_befehl <- tail(history(max.show = Inf), 1) # Letzten Befehl abrufen
befehl_liste <<- append(befehl_liste, letzter_befehl) # In die Liste speichern
}
# Beispielaufruf der Funktion nach einem Befehl
speichere_letzten_befehl() # Speichert den letzten Befehl in der Liste
print(befehl_liste)
var1 = 5
print(befehl_liste)
befehl_liste <- list()
speichere_letzten_befehl <- function() {
letzter_befehl <- tail(history(max.show = Inf), 1) # Letzten Befehl abrufen
befehl_liste <- append(befehl_liste, letzter_befehl) # In die Liste speichern
}
# Beispielaufruf der Funktion nach einem Befehl
speichere_letzten_befehl() # Speichert den letzten Befehl in der Liste
print(befehl_liste)
var1 = 5
print(befehl_liste)
var1 = 5
# Beispielaufruf der Funktion nach einem Befehl
speichere_letzten_befehl() # Speichert den letzten Befehl in der Liste
View(befehl_liste)
befehl_liste <- list()
# Callback-Funktion, die jeden ausgeführten Befehl speichert
speichere_letzten_befehl <- function(expr, value, ok, visible) {
befehl_liste <<- append(befehl_liste, deparse(expr))
TRUE  # Weiterhin alle Befehle ausführen
}
# Aktiviert den Callback, sodass jeder Befehl gespeichert wird
addTaskCallback(speichere_letzten_befehl)
var1 = 5
var2 = 3
View(befehl_liste)
?history
tail(history(max.show = Inf), 2)
tail(history(max.show = Inf), 1)
tail(history(max.show = 25), 1)
history(max.show = 25)
history(max.show = Inf)
tail(history(), 1)
hist = list(history(max.show = 1))
View(hist)
hist = list(history(max.show = 1))
View(hist)
history = list(try(savehistory))
View(history)
tail(readLines(".Rhistory"), 1)
liste = list(tail(readLines(".Rhistory"), 1))
View(liste)
liste = list(tail(readLines(history), 1))
tail(history)
history()
history()[1]
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
last_command <- tail(history(max.show = Inf), 1)
last_command <- readLines("~/.Rhistory", warn = FALSE)
last_command <- tail(last_command, 1)
temp_history_file <- tempfile()
savehistory(temp_history_file)
# Letzten Befehl aus der temporären History-Datei lesen
last_command <- tail(readLines(temp_history_file), 1)
errors = geterrmessage()
var1 = 5
var3 = var1 * var2
errors = geterrmessage()
summary[data$hp]
errors = geterrmessage()
load_all()
summary[data$hp]
rexplain()
load_all()
summary[data$hp]
rexplain()
summary(data$hp)
rexplain()
load_all()
summary(data$hp)
rexplain()
load_all()
summary(data$hp)
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
#examples for checking
read.csv("data/testfile")
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
plot = ggplot(data = mtcars, mapping = aes(x = hp, y = cyl)) +
geom_point()
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
data = mtcars
summary(data$weight_kg)
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary[data$hp]
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
var1 = 5
var2 = 3
var3 = var_1 * var2
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
var1 = 5
var2 = 3
var3 = var_1 * var2
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
var1 = 5
var2 = 3
var3 = var_1 * var2
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
read.csv("data/testfile")
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
plot = ggplot(data = mtcars, mapping = aes(x = hp, y = cyl)) +  geom_point()
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain()
View(data)
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain()
list(capture.output)
list(paste0(capture.output))
capture.output()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary[data$hp]
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain()
data_header = header()
View(data_header)
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
var1 = 5
var2 = 3
var3 = var_1 * var2
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain()
use_r("rerror.R")
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary[data$hp]
rexplain()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary[data$hp]
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain("Why is there NULL in the table instead of information on the variable weight_kg?")
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain("Why is there NULL in the table instead of information on the variable weight_kg?")
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain()
load_all()
data = mtcars
summary(data$weight_kg)
rexplain()
devtools::check()
document("rainer")
document()
load_all()
devtools::check()
?options
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
ractivate("on")
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
ractivate("on")
var1 = var2*3
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
ractivate("on")
summary(data$weight_kg)
data = mtcars
var1 = var2*3
ractivate("off")
var1 = var2*3
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
read.csv("data/testfile")
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
plot = ggplot(data = mtcars, mapping = aes(x = hp, y = cyl)) +  geom_point()
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary[data$hp]
rerror()
summary[data$smile]
rerror()
var1 = 5
var2 = 3
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
var1 = 5
var2 = 3
var3 = var_1 * var2
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
var1 = 5
var2 = 3
var3 = var_1 * var2
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary[data$hp]
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
plot = ggplot(data = mtcars, mapping = aes(x = hp, y = cyl)) +  geom_point()
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
ractivate("on")
data = mtcars
plot = ggplot(data = mtcars, mapping = aes(x = hp, y = cyl)) +  geom_point()
ractivate("off")
plot = ggplot(data = mtcars, mapping = aes(x = hp, y = cyl)) +  geom_point()
ractivate(on)
ractivate("ein")
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
read.csv("data/testfile")
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
plot = ggplot(data = mtcars, mapping = aes(x = hp, y = cyl)) +  geom_point()
rerror()
summary[data$hp]
rerror()
var1 = 5
var2 = 3
var3 = var_1 * var2
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
var1 = 5
var2 = 3
var3 = var_1 * var2
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
read.csv("data/testfile")
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
plot = ggplot(data = mtcars, mapping = aes(x = hp, y = cyl)) +  geom_point()
rerror()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
data$weight_kg = data$wt*0.454
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rerror()
summary(data$weight_kg)
rexplain("Why is there Length 0 and NULL at class and mode in the table?")
View(data)
summary(data$weight_kg)
rexplain("Why is there Length 0 and NULL at class and mode in the table?")
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
data = mtcars
summary(data$weight_kg)
rexplain("Why is there Length 0 and NULL at class and mode in the table?")
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
library(devtools)
load_all()
devtools::check()
#toplevel script for testing the function etc. Will be removed later, listed in .Rbuildignore
#library(devtools)
devtools::load_all()
devtools::check()
